{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS Cloudformation template to create SAM for Sto Psito",

    "Parameters": {
        "Region": {
            "Description": "The AWS region this is running in",
            "Type": "String",
            "Default": "eu-west-1"
        }
    },

    "Resources": {

        "ReservationsTable": {
            "Type" : "AWS::DynamoDB::Table",
            "Properties" : {
                "TableName" : "Reservations",
                "BillingMode" : "PAY_PER_REQUEST",
                "AttributeDefinitions" : [
                    {
                        "AttributeName" : "Id",
                        "AttributeType" : "S" 
                    }
                ],
                "KeySchema" : [
                    {
                        "AttributeName": "Id",
                        "KeyType": "HASH"
                    }
                ],
            }
        },

        "ReservationFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "sto-psito-lambda-functions",
                    "S3Key": "create-reservation.zip"
                },
                "FunctionName": "Reserve",
                "Handler": "main",
                "MemorySize": 128,
                "Role": "arn:aws:iam::896764428848:role/sto-psito-lambda-role",
                "Runtime": "go1.x"
            }
        },

        "ReservationFunctionApiGatewayPermission": {
            "Type" : "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "FunctionName": { 
                    "Fn::GetAtt": ["ReservationFunction", "Arn"] 
                },
                "SourceArn": {
                    "Fn::Join": ["", ["arn:aws:execute-api:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":", {"Ref": "ReservationsApi"}, "/*"]]
                }
            },
            "DependsOn": ["ReservationFunction"]
        },

        "ReservationsApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": "Reservations",
                "Description": "API Gateway for Reservations"
            }
        },

        "ReservationResponseModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
                "ContentType": "application/json",
                "Name": "ReservationResponse",
                "RestApiId": { "Ref": "ReservationsApi" },
                "Schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "ReservationResponse",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "id": { "type": "string" },
                        "timestamp": { "type": "integer" }
                    },
                }
            }
        },

        "ReservationRequestModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
                "ContentType": "application/json",
                "Name": "ReservationRequest",
                "RestApiId": { "Ref": "ReservationsApi" },
                "Schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "ReservationRequest",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "name": { "type": "string" },
                        "email": { "type": "string" },
                        "telephone": { "type": "string" },
                        "party": { "type": "integer" },
                        "timestamp": { "type": "integer" },
                        "message": { "type": "string" } 
                    },
                }
            }
        },

        "ReservationsResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": {"Ref": "ReservationsApi"},
                "ParentId": {"Fn::GetAtt": ["ReservationsApi", "RootResourceId"]},
                "PathPart": "reservations"
            }
        },

        "ReservationsPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "POST",
                "ResourceId": { "Ref": "ReservationsResource" },
                "RestApiId": { "Ref": "ReservationsApi" },
                "AuthorizationType": "NONE",
                "OperationName": "RequestReservation",
                "MethodResponses": [{
                    "ResponseModels": {
                        "application/json": {"Ref": "ReservationResponseModel"}
                    },
                    "StatusCode": 200
                }],
                "RequestModels": { 
                    "application/json": {"Ref": "ReservationRequestModel"} 
                },
                "Integration": {
                    "Type": "AWS",
                    "IntegrationHttpMethod": "POST",
                    "Uri": { "Fn::Sub":"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ReservationFunction.Arn}/invocations"},
                    "PassthroughBehavior": "WHEN_NO_TEMPLATES",
                    "IntegrationResponses": [{
                        "StatusCode": 200
                    }]
                }
            }
        },

        "ReservationsApiDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
                "RestApiId": {"Ref": "ReservationsApi"},
                "StageName": "v1"
            },
            "DependsOn": ["ReservationsPost"]
        }

    }
}